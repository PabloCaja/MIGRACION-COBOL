      ******************************************************************
      **      I D E N T I F I C A T I O N   D I V I S I O N           **
      ******************************************************************
       IDENTIFICATION DIVISION.
      *----------------------------------------------------------------*
       PROGRAM-ID. LOADHOG.
       AUTHOR. CAJA.
      ******************************************************************
      **      E N V I R O N M E N T   D I V I S I O N                 **
      ******************************************************************
       ENVIRONMENT DIVISION.
      *----------------------------------------------------------------*
       CONFIGURATION SECTION.
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.
      *--------------------- FICHEROS DE ENTRADA ----------------------*
           SELECT FENTRADA
           ASSIGN TO  FENTRADA
           FILE STATUS IS FS-FENTRADA.
      *
           SELECT FINCIDE
           ASSIGN TO FINCIDE
           FILE STATUS IS FS-FINCIDE.
      *
      ******************************************************************
      **      D A T A   D I V I S I O N                               **
      ******************************************************************
       DATA DIVISION.
      *----------------------------------------------------------------*
       FILE SECTION.
       FD FENTRADA
            BLOCK CONTAINS 0 RECORDS
            LABEL RECORD STANDARD
            RECORDING MODE IS F.

       01 REG-ENT                 PIC X(280).
      *
       FD  FINCIDE
           BLOCK CONTAINS 0 RECORDS
           LABEL RECORD ARE STANDARD
           RECORDING MODE IS F
           DATA RECORD IS REG-INC.

       01 REG-INC                 PIC X(86).
      *----------------------------------------------------------------*
       WORKING-STORAGE SECTION.
      *--------------------- CONSTANTES ALFANUMERICAS -----------------*
       01 CA-CONSTANTES-ALFANUMERICAS.
          05 CA-00                PIC X(02) VALUE '00'.
          05 CA-01                PIC X(02) VALUE '01'.
          05 CA-10                PIC X(02) VALUE '10'.
          05 CA-88                PIC X(02) VALUE '88'.
          05 CA-99                PIC X(02) VALUE '99'.
          05 CA-PGM               PIC X(07) VALUE 'LOADHOG'.
          05 CA-KO                PIC X(02) VALUE 'KO'.
          05 CA-OK                PIC X(02) VALUE 'OK'.
          05 CA-PARR-PRO          PIC X(12) VALUE '2000-PROCESO'.
          05 CA-DESC-ERR          PIC X(12) VALUE 'ERROR INSERT'.
      *--------------------- CONSTANTES NUMERICAS ---------------------*
       01 CN-CONSTANTES-NUMERICAS.
          05 CN-100               PIC 9(03) VALUE 100.
      *--------------------- FILE STATUS ------------------------------*
       01 FS-FILE-STATUS.
          05 FS-FENTRADA          PIC X(02).
          05 FS-FINCIDE           PIC X(02).
      *--------------------- SWITCHES ---------------------------------*
       01 SW-FIN-FENTRADA         PIC X(01).
          88 SI-FIN-FENTRADA      VALUE 'S'.
          88 NO-FIN-FENTRADA      VALUE 'N'.
      *--------------------- CONTADORES -------------------------------*
       01 CNT-CONTADORES.
          05 CNT-REG-FENTRADA     PIC 9(09).
          05 CNT-REG-INSERT       PIC 9(09).
          05 CNT-REG-UPDATE       PIC 9(09).
          05 WK-ESCRITOS-1        PIC 9(09).
      *--------------------- VARIABLES --------------------------------*
       01 WK-SQLCODE              PIC -999.
      *
       01 WK-INCIDE.
          05 S-RETORNO             PIC X(02).
          05 S-SUBRETORNO          PIC X(02).
          05 S-ACCION              PIC X(20).
          05 S-TABLA               PIC X(20).
          05 S-PARRAFO             PIC X(20).
          05 S-NOMRUTINA           PIC X(08).
          05 S-SQLCODE-E           PIC S9(04).
      *
       01 WK-VARIABLES.
          05 WK-CLAVE-ENT.
             10 COD-ID-CLAVE      PIC X(09).
      * SWITCHES PARA EL PROCESO
       01 SWITCHES.
          05 SW-ERROR             PIC X(01) VALUE 'N'.
             88 SI-ERROR                    VALUE 'S'.
             88 NO-ERROR                    VALUE 'N'.
      *
      *--------------------- COPY DE HOGAR CON ERRORES-----------------*
       COPY CPYHOLOA.
      *TBDAREPO
              EXEC SQL
               INCLUDE SQLCA
              END EXEC.
      *
              EXEC SQL
                 INCLUDE TBDAREPO
              END-EXEC.
      *
              EXEC SQL
                 INCLUDE TBHOGARM
              END-EXEC.

      *
      ******************************************************************
      **      P R O C E D U R E   D I V I S I O N                     **
      ******************************************************************
       PROCEDURE DIVISION.
      *----------------------------------------------------------------*
           PERFORM 1000-INICIO
              THRU 1000-INICIO-EXIT
      *
           PERFORM 2000-PROCESO
              THRU 2000-PROCESO-EXIT
             UNTIL SI-FIN-FENTRADA
      *
           PERFORM 3000-FIN
              THRU 3000-FIN-EXIT
           .
      *--------------------- INICIO -----------------------------------*
       1000-INICIO.
      *
           DISPLAY ' 1000-INICIO'
      *
           INITIALIZE CNT-CONTADORES
                      FS-FILE-STATUS
                      CPYHOGAR
                      DCLHOGAR-MAPFRE
                      WK-INCIDE
      *
           SET NO-FIN-FENTRADA TO TRUE
      *
           PERFORM 1100-ABRIR-FICHEROS
              THRU 1100-ABRIR-FICHEROS-EXIT
      *
           PERFORM 1150-ABRIR-INCIDE
              THRU 1150-ABRIR-INCIDE-EXIT
      *
           MOVE CA-PGM   TO TB-NOMBRE-PGM
      *
           PERFORM 1200-CONSULTAR-DAREPOS
              THRU 1200-CONSULTAR-DAREPOS-EXIT
           .
      *
       1000-INICIO-EXIT.
           EXIT.
      ******************************************************************
      *     1200-ABRIR-FICHERO                                         *
      ******************************************************************
       1100-ABRIR-FICHEROS.
      *
           DISPLAY '1100-ABRIR-FICHEROS'
      *
           OPEN INPUT FENTRADA
      *
           IF FS-FENTRADA NOT = CA-00
              DISPLAY 'ERROR EN LA APERTURA DEL FICHERO DE FENTRADA'
              DISPLAY 'NOMBRE DEL FICHERO: FENTRADA'
              DISPLAY 'FILE STATUS: ' FS-FENTRADA
              PERFORM 3000-FIN
                 THRU 3000-FIN-EXIT
           END-IF
      *
           .
      *
       1100-ABRIR-FICHEROS-EXIT.
           EXIT.
      ******************************************************************
      *     1200-ABRIR-INCIDE                                          *
      ******************************************************************
       1150-ABRIR-INCIDE.
      *
           DISPLAY '1150-ABRIR-INCIDEN'
      *
           OPEN OUTPUT FINCIDE
      *
           IF FS-FINCIDE = CA-00
              CONTINUE
           ELSE
              SET SI-ERROR            TO TRUE
              DISPLAY ' ERROR ABIR INCIDENCIAS'
              PERFORM 3000-FIN
                 THRU 3000-FIN-EXIT
           END-IF
      *
           .
       1150-ABRIR-INCIDE-EXIT.
           EXIT.
      ******************************************************************
      *     CONSULTAR DAREPOS                                          *
      ******************************************************************
       1200-CONSULTAR-DAREPOS.
      *
           DISPLAY 'CONSULTAR DAREPOS'
      *
           EXEC SQL
              SELECT ESTADO
                    ,VALOR_CLAVE
                INTO :TB-ESTADO
                    ,:TB-VALOR-CLAVE-TEXT
                FROM DAREPOS
              WHERE NOMBRE_PGM = :TB-NOMBRE-PGM
           END-EXEC.
      *
           EVALUATE SQLCODE
              WHEN 0
      *
                 EVALUATE TB-ESTADO
                    WHEN CA-KO
                       DISPLAY 'VOY A LEER ENTRADA'
                       PERFORM 9000-LEER-ENTRADA
                          THRU 9000-LEER-ENTRADA-EXIT
                         UNTIL WK-CLAVE-ENT > TB-VALOR-CLAVE-TEXT

      *
                    WHEN CA-OK
                       PERFORM 9000-LEER-ENTRADA
                          THRU 9000-LEER-ENTRADA-EXIT
      *
                    WHEN OTHER
                       DISPLAY 'ERROR: CAMPO TB-ESTADO NO VALIDO'
                       PERFORM 3000-FIN
                          THRU 3000-FIN-EXIT
                 END-EVALUATE
      *
              WHEN 100
      *
                 PERFORM 1300-INSERTAR-DAREPOS
                    THRU 1300-INSERTAR-DAREPOS-EXIT
                 PERFORM 9000-LEER-ENTRADA
                    THRU 9000-LEER-ENTRADA-EXIT
      *
              WHEN OTHER
      *
                 DISPLAY 'ERROR SELECT DE DAREPOS'
                 MOVE SQLCODE     TO WK-SQLCODE
                 DISPLAY 'SQLCODE: ' WK-SQLCODE
                 DISPLAY 'PARRAFO: CONSULTAR-DAREPOS'
                 DISPLAY 'TABLA: DAREPOS'
                 PERFORM 3000-FIN
                    THRU 3000-FIN-EXIT
           END-EVALUATE
           .
       1200-CONSULTAR-DAREPOS-EXIT.
           EXIT
           .
      *
      ******************************************************************
      *     INSERTAR DAREPOS                                           *
      ******************************************************************
      *
       1300-INSERTAR-DAREPOS.
      *
           DISPLAY '1300-INSERTAR-DAREPOS'
      *
           MOVE CA-KO    TO TB-ESTADO
           INITIALIZE TB-VALOR-CLAVE-TEXT
      *
           EXEC SQL
              INSERT INTO DAREPOS VALUES(
                       :TB-NOMBRE-PGM
                      ,:TB-ESTADO
                      ,:TB-VALOR-CLAVE-TEXT)
           END-EXEC.
      *
           EVALUATE SQLCODE
              WHEN 0
                 CONTINUE
              WHEN -803
                 DISPLAY 'ERROR AL INSERTAR EN DAREPOS POR REG DUPLI'
                 DISPLAY 'RETORNO: 99'
                 DISPLAY 'SQLCODE: ' SQLCODE
                 DISPLAY 'PARRAFO: INSERTAR-DAREPOS'
                 DISPLAY 'TABLA  : DAREPOS'
                 DISPLAY 'ERROR: NO ES PUSIBLA'

                 PERFORM 3000-FIN
                    THRU 3000-FIN-EXIT
              WHEN OTHER
                 DISPLAY 'ERROR AL INSERTAR EN DAREPOS'
                 DISPLAY 'RETORNO: 99'
                 MOVE SQLCODE TO WK-SQLCODE
                 DISPLAY 'SQLCODE: ' WK-SQLCODE
                 DISPLAY 'PARRAFO: INSERTAR-DAREPOS'
                 DISPLAY 'TABLA  : DAREPOS'

                 PERFORM 3000-FIN
                    THRU 3000-FIN-EXIT
           END-EVALUATE
           .
       1300-INSERTAR-DAREPOS-EXIT.
           EXIT
           .
      ******************************************************************
      *     9000-LEER-ENTRADA                                          *
      ******************************************************************
       9000-LEER-ENTRADA.
      *
           DISPLAY '1300-INSERTAR-DAREPOS'
      *
           READ FENTRADA INTO ENTRADA
      *
           EVALUATE FS-FENTRADA
             WHEN CA-00
                ADD 1 TO CNT-REG-FENTRADA
                MOVE IN-POLIZA TO COD-ID-CLAVE
      *
             WHEN CA-10
                DISPLAY 'HE LEIDO Y SE HA ACABADO'
                SET SI-FIN-FENTRADA TO TRUE
                 PERFORM 3300-DAREPOS-OK
                    THRU 3300-DAREPOS-OK-EXIT
      *
             WHEN OTHER
                DISPLAY 'HE LEIDO Y ALGO HA IDO MUY MUY MAL'
                DISPLAY 'ERROR AL LEER FICHERO DE FENTRADA'
                DISPLAY 'NOMBRE DEL FICHERO: FENTRADA'
                DISPLAY 'FILE STATUS: ' FS-FENTRADA
                PERFORM 3000-FIN
                   THRU 3000-FIN-EXIT
      *
           END-EVALUATE
      *
           .
      *
       9000-LEER-ENTRADA-EXIT.
           EXIT
           .
      ******************************************************************
      *                PROCESO                                         *
      ******************************************************************
       2000-PROCESO.
      *
           DISPLAY ' ENTRO AL PROCESO'
      *
           PERFORM 2100-INSERT
              THRU 2100-INSERT-EXIT
      *
           PERFORM 2200-UPDATE-DAREPOS
              THRU 2200-UPDATE-DAREPOS-EXIT
      *
           PERFORM 9000-LEER-ENTRADA
              THRU 9000-LEER-ENTRADA-EXIT
           .
       2000-PROCESO-EXIT.
           EXIT
           .
      ******************************************************************
      *     INSERT                                                     *
      ******************************************************************
       2100-INSERT.
      *
           DISPLAY '2100 INSERT'
      *
           INITIALIZE DCLHOGAR-MAPFRE
                      ERRORES
      *
           MOVE CA-00          TO RETORNO
                                  SUBRETORNO
      *
           IF IN-POLIZA  EQUAL SPACES OR LOW-VALUES
              MOVE CA-88              TO RETORNO
              MOVE CA-88              TO SUBRETORNO
              MOVE 'VALIDAR ENTRADA'  TO ACCION
              MOVE 'PARR INICIO'      TO PARRAFO
              PERFORM 3000-FIN
                 THRU 3000-FIN-EXIT
           END-IF
      *
           IF IN-PRIMA = 0
              MOVE CA-88              TO RETORNO
              MOVE CA-88              TO SUBRETORNO
              MOVE 'VALIDAR ENTRADA'  TO ACCION
              MOVE 'PARR INICIO'      TO PARRAFO
              PERFORM 3000-FIN
                 THRU 3000-FIN-EXIT
           END-IF
      *
           IF IN-CONTINENTE = 0
              MOVE CA-88              TO RETORNO
              MOVE CA-88              TO SUBRETORNO
              MOVE 'VALIDAR ENTRADA'  TO ACCION
              MOVE 'PARR INICIO'      TO PARRAFO
              PERFORM 3000-FIN
                 THRU 3000-FIN-EXIT
           END-IF
      *
           IF IN-CONTENIDO = 0
              MOVE CA-88              TO RETORNO
              MOVE CA-88              TO SUBRETORNO
              MOVE 'VALIDAR ENTRADA'  TO ACCION
              MOVE 'PARR INICIO'      TO PARRAFO
              PERFORM 3000-FIN
                 THRU 3000-FIN-EXIT
           END-IF
      *
           IF IN-COBERTURAS  EQUAL SPACES OR LOW-VALUES
              MOVE CA-88              TO RETORNO
              MOVE CA-88              TO SUBRETORNO
              MOVE 'VALIDAR ENTRADA'  TO ACCION
              MOVE 'PARR INICIO'      TO PARRAFO
              PERFORM 3000-FIN
                 THRU 3000-FIN-EXIT
           END-IF
      *
           IF IN-FECHA-INICIO  EQUAL SPACES OR LOW-VALUES
              MOVE CA-88              TO RETORNO
              MOVE CA-88              TO SUBRETORNO
              MOVE 'VALIDAR ENTRADA'  TO ACCION
              MOVE 'PARR INICIO'      TO PARRAFO
              PERFORM 3000-FIN
                 THRU 3000-FIN-EXIT
           END-IF
      *
           IF IN-FECHA-VENCIMIENTO  EQUAL SPACES OR LOW-VALUES
              MOVE CA-88              TO RETORNO
              MOVE CA-88              TO SUBRETORNO
              MOVE 'VALIDAR ENTRADA'  TO ACCION
              MOVE 'PARR INICIO'      TO PARRAFO
              PERFORM 3000-FIN
                 THRU 3000-FIN-EXIT
           END-IF
      *
           MOVE IN-POLIZA             TO TB-POLIZA
           MOVE IN-PRIMA              TO TB-PRIMA
           MOVE IN-CONTINENTE         TO TB-CONTINENTE
           MOVE IN-CONTENIDO          TO TB-CONTENIDO
           MOVE IN-COBERTURAS         TO TB-COBERTURAS
           MOVE IN-FECHA-INICIO       TO TB-FECHA-INICIO
           MOVE IN-FECHA-VENCIMIENTO  TO TB-FECHA-VENCIMIENTO


           EXEC SQL
              INSERT INTO HOGAR_MAPFRE
                VALUES (
                    :TB-POLIZA
                   ,:TB-PRIMA
                   ,:TB-CONTINENTE
                   ,:TB-CONTENIDO
                   ,:TB-COBERTURAS
                   ,:TB-FECHA-INICIO
                   ,:TB-FECHA-VENCIMIENTO
                 )
           END-EXEC.
      *
           EVALUATE SQLCODE
               WHEN 0
                   MOVE CA-00         TO RETORNO
                   ADD 1 TO CNT-REG-INSERT
               WHEN OTHER
                   MOVE CA-99         TO RETORNO
                   MOVE CA-01         TO SUBRETORNO
                   MOVE 'INSERT'      TO ACCION
                   MOVE 'LOADVID'     TO TABLA
                   MOVE 'PROCESO'     TO PARRAFO
                   MOVE SQLCODE       TO SQLCODE-E
           END-EVALUATE
      *
           .
       2100-INSERT-EXIT.
           EXIT.
      *--------------------- UPDATE DAREPOS ---------------------------*
       2200-UPDATE-DAREPOS.
      *
           DISPLAY ' UPDATE DAREPOS '
      *
           MOVE WK-CLAVE-ENT TO TB-VALOR-CLAVE-TEXT
           MOVE LENGTH TB-VALOR-CLAVE-TEXT TO TB-VALOR-CLAVE-LEN
           MOVE CA-PGM     TO TB-NOMBRE-PGM
      *
           EXEC SQL
              UPDATE DAREPOS
                SET ESTADO = :TB-ESTADO
                   ,VALOR_CLAVE = :TB-VALOR-CLAVE
               WHERE NOMBRE_PGM = :TB-NOMBRE-PGM
           END-EXEC.
      *
           EVALUATE SQLCODE
              WHEN 0
                  ADD 1    TO CNT-REG-UPDATE

              WHEN OTHER
                 DISPLAY 'ERROR EN EL UPDATE DE DAREPOS'
                 DISPLAY 'PARRAFO: UPDATE-DAREPOS'
                 DISPLAY 'TABLA: DAREPOS'
                 MOVE SQLCODE TO WK-SQLCODE
                 DISPLAY 'SQLCODE: ' WK-SQLCODE
                 PERFORM 3000-FIN
                    THRU 3000-FIN-EXIT
           END-EVALUATE
      *
           EXEC SQL
                COMMIT
           END-EXEC.

       2200-UPDATE-DAREPOS-EXIT.
           EXIT
           .
      *
      **********************************************************
      **     ESCRIBIR ERROR                                    *
      **********************************************************
      *
       9200-ESCRIBIR-ERROR.
      *
           DISPLAY '9200-ESCRIBIR ERROR'
      *
           MOVE RETORNO         TO S-RETORNO
           MOVE SUBRETORNO      TO S-SUBRETORNO
           MOVE ACCION          TO S-ACCION
           MOVE TABLA           TO S-TABLA
           MOVE PARRAFO         TO S-PARRAFO
           MOVE NOMRUTINA       TO S-NOMRUTINA
           MOVE SQLCODE-E       TO S-SQLCODE-E
      *
           WRITE REG-INC  FROM WK-INCIDE
      *
           IF FS-FINCIDE = CA-00
              INITIALIZE WK-INCIDE
              ADD 1                    TO WK-ESCRITOS-1
      *
           ELSE
              SET SI-ERROR             TO TRUE
      *
              PERFORM 3000-FIN
                 THRU 3000-FIN-EXIT
           END-IF

      *
           .
       9200-ESCRIBIR-ERROR-EXIT.
           EXIT.
      *--------------------- FIN --------------------------------------*
       3000-FIN.
      *
           PERFORM 3100-CERRAR-FICHEROS
              THRU 3100-CERRAR-FICHEROS-EXIT
      *
           PERFORM 3200-MOSTRAR-ESTADISTICAS
              THRU 3200-MOSTRAR-ESTADISTICAS-EXIT
      *
           STOP RUN
           .
      *
       3000-FIN-EXIT.
           EXIT
           .
      *--------------------- DAREPOS OK -------------------------------*
       3300-DAREPOS-OK.
      *
           DISPLAY '3300-DAREPOS-OK'
      *
           MOVE CA-OK TO TB-ESTADO
           INITIALIZE TB-VALOR-CLAVE-TEXT
      *
           EXEC SQL
              UPDATE DAREPOS
                 SET ESTADO = :TB-ESTADO
                    ,VALOR_CLAVE = :TB-VALOR-CLAVE
                 WHERE NOMBRE_PGM = :TB-NOMBRE-PGM
           END-EXEC.
      *
           EVALUATE SQLCODE
              WHEN 0
                 ADD 1 TO CNT-REG-UPDATE
              WHEN OTHER
                 DISPLAY 'ERROR AL PONER OK EN DAREPOS'
                 DISPLAY 'PARRAFO: DAREPOS-OK'
                 DISPLAY 'TABLA: DAREPOS'
                 MOVE SQLCODE TO WK-SQLCODE
                 DISPLAY 'SQLCODE: ' WK-SQLCODE
                 PERFORM 3000-FIN
                    THRU 3000-FIN-EXIT
           END-EVALUATE

           .
      *
       3300-DAREPOS-OK-EXIT.
           EXIT
           .
      *--------------------- CERRAR-FICHEROS --------------------------*
       3100-CERRAR-FICHEROS.
           CLOSE FENTRADA
                 FINCIDE
      *
           IF FS-FENTRADA NOT = CA-00
              DISPLAY 'ERROR AL CERRAR EL FICHERO DE FENTRADA'
              DISPLAY 'NOMBRE DEL FICHERO: FENTRADA'
              DISPLAY 'FILE STATUS: ' FS-FENTRADA
           END-IF

           IF FS-FINCIDE NOT = CA-00
              DISPLAY 'ERROR AL CERRAR EL FICHERO DE INCIDENCIAS'
              DISPLAY 'NOMBRE DEL FICHERO: FINCIDE'
              DISPLAY 'FILE STATUS INCIDE: ' FS-FINCIDE
           END-IF
           .
      *
       3100-CERRAR-FICHEROS-EXIT.
           EXIT
           .
      *--------------------- MOSTRAR-ESTADISTICAS ---------------------*
       3200-MOSTRAR-ESTADISTICAS.
           DISPLAY '**********************************************'
           DISPLAY '* E S T A D I S T I C A S                    *'
           DISPLAY '*--------------------------------------------*'
           DISPLAY '* REGISTROS LEIDOS   DE FENTRADA : '
                                              CNT-REG-FENTRADA ' *'
           DISPLAY '* REGISTROS INSERTADOS EN CUENTAS: '
                                              CNT-REG-INSERT   ' *'
           DISPLAY '* REGISTROS UPDATEADOS EN DAREPOS: '
                                              CNT-REG-UPDATE   ' *'
           DISPLAY '**********************************************'
           .
      *
       3200-MOSTRAR-ESTADISTICAS-EXIT.
           EXIT
           .
      *
